"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _ContentfulContext = _interopRequireDefault(require("./ContentfulContext"));

var _helpers = require("./helpers");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var defaultProps = {
  include: 10,
  query: {},
  parser: function parser(data, props) {
    return data;
  }
};

var useContentful = function useContentful(props) {
  var contentful = (0, _react.useContext)(_ContentfulContext["default"]);

  var internalProps = _objectSpread(_objectSpread(_objectSpread({}, defaultProps), props), {}, {
    contentful: contentful
  });

  var parser = internalProps.parser;

  var _useState = (0, _react.useState)(null),
      error = _useState[0],
      setError = _useState[1];

  var _useState2 = (0, _react.useState)(false),
      loading = _useState2[0],
      setLoading = _useState2[1];

  var _useState3 = (0, _react.useState)((0, _helpers.checkCache)(internalProps)),
      data = _useState3[0],
      setData = _useState3[1];

  var _useState4 = (0, _react.useState)(!!data),
      fetched = _useState4[0],
      setFetched = _useState4[1];

  var requestContentfulData = function requestContentfulData() {
    setLoading(true);
    (0, _helpers.fetchData)(internalProps).then(function (response) {
      setData(parser ? parser(response, internalProps) : response);
      setLoading(false);
      setFetched(true);
    })["catch"](function (error) {
      setError(error);
    });
  };

  (0, _react.useEffect)(function () {
    if (fetched) {
      setFetched(false);
    }

    requestContentfulData();
  }, [JSON.stringify(props)]);

  var finish = function finish() {
    return {
      data: data,
      error: error,
      fetched: fetched,
      loading: loading
    };
  };

  if (contentful && contentful.renderPromises) {
    return contentful.renderPromises.addQueryPromise({
      fetchData: function fetchData() {
        return (0, _helpers.fetchData)(internalProps);
      },
      props: internalProps
    }, finish);
  }

  return finish();
};

var _default = useContentful;
exports["default"] = _default;