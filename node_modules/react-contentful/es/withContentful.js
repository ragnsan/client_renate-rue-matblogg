import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
import React from 'react';
import hoistStatics from 'hoist-non-react-statics';
import { getDisplayName } from 'react-hoc-helpers';
import ContentfulContext from './ContentfulContext';
/**
 * A public higher-order component to access the imperative API
 */

function withContentful(Component) {
  var C = function C(props) {
    var wrappedComponentRef = props.wrappedComponentRef,
        remainingProps = _objectWithoutPropertiesLoose(props, ["wrappedComponentRef"]);

    return /*#__PURE__*/React.createElement(ContentfulContext.Consumer, null, function (context) {
      return /*#__PURE__*/React.createElement(Component, _extends({}, remainingProps, {
        contentful: context,
        ref: wrappedComponentRef
      }));
    });
  };

  C.context = ContentfulContext;
  C.displayName = "withContentful(" + getDisplayName(Component) + ")";
  C.WrappedComponent = Component;
  return hoistStatics(C, Component);
}

export default withContentful;